/*
 * APIv3 (New)
 *  # Introduction This is our new version of API. We invite you to start using it and give us your feedback # Getting Started  E-goi can be integrated with many environments and programming languages via our REST API. We've created a developer focused portal to give your organization a clear and quick overview of how to integrate with E-goi. The developer portal focuses on scenarios for integration and flow of events. We recommend familiarizing yourself with all of the content in the developer portal, before start using our rest API.   The E-goi  APIv3 is served over HTTPS. To ensure data privacy, unencrypted HTTP is not supported.  Request data is passed to the API by POSTing JSON objects to the API endpoints with the appropriate parameters.   BaseURL = api.egoiapp.com  # RESTful Services This API supports 5 HTTP methods:  * <b>GET</b>: The HTTP GET method is used to **read** (or retrieve) a representation of a resource. * <b>POST</b>: The POST verb is most-often utilized to **create** new resources. * <b>PATCH</b>: PATCH is used for **modify** capabilities. The PATCH request only needs to contain the changes to the resource, not the complete resource * <b>PUT</b>: PUT is most-often utilized for **update** capabilities, PUT-ing to a known resource URI with the request body containing the newly-updated representation of the original resource. * <b>DELETE</b>: DELETE is pretty easy to understand. It is used to **delete** a resource identified by a URI.  # Authentication   We use a custom authentication method, you will need a apikey that you can find in your account settings. Below you will see a curl example to get your account information:  #!/bin/bash  curl -X GET 'https://api.egoiapp.com/my-account' \\  -H 'accept: application/json' \\  -H 'Apikey: <YOUR_APY_KEY>'  Here you can see a curl Post example with authentication:  #!/bin/bash  curl -X POST 'http://api.egoiapp.com/tags' \\  -H 'accept: application/json' \\  -H 'Apikey: <YOUR_APY_KEY>' \\  -H 'Content-Type: application/json' \\  -d '{`name`:`Your custom tag`,`color`:`#FFFFFF`}'  # SDK Get started quickly with E-goi with our integration tools. Our SDK is a modern open source library that makes it easy to integrate your application with E-goi services.  * <a href='https://github.com/E-goi/sdk-java'>Java</a>  * <a href='https://github.com/E-goi/sdk-php'>PHP</a>  * <a href='https://github.com/E-goi/sdk-python'>Python</a>  * <a href='https://github.com/E-goi/sdk-ruby'>Ruby</a>  * <a href='https://github.com/E-goi/sdk-javascript'>Javascript</a>  * <a href='https://github.com/E-goi/sdk-csharp'>C#</a>  # Stream Limits Stream limits are security mesures we have to make sure our API have a fair use policy, for this reason, any request that creates or modifies data (**POST**, **PATCH** and **PUT**) is limited to a maximum of **20MB** of content length. If you arrive to this limit in one of your request, you'll receive a HTTP code **413 (Request Entity Too Large)** and the request will be ignored. To avoid this error in importation's requests, it's advised the request's division in batches that have each one less than 20MB.  # Timeouts Timeouts set a maximum waiting time on a request's response. Our API, sets a default timeout for each request and when breached, you'll receive an HTTP **408 (Request Timeout)** error code. You should take into consideration that response times can vary widely based on the complexity of the request, amount of data being analyzed, and the load on the system and workspace at the time of the query. When dealing with such errors, you should first attempt to reduce the complexity and amount of data under analysis, and only then, if problems are still occurring ask for support.  For all these reasons, the default timeout for each request is **10 Seconds** and any request that creates or modifies data (**POST**, **PATCH** and **PUT**) will have a timeout of **60 Seconds**. Specific timeouts may exist for specific requests, these can be found in the request's documentation.  <security-definitions/>
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.egoi.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * Push stats of the contact
 */
@ApiModel(description = "Push stats of the contact")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-07-12T20:27:19.076308+01:00[Europe/Lisbon]")
public class ComplexContactAllOfPushStats   {
  public static final String SERIALIZED_NAME_SENT = "sent";
  @SerializedName(SERIALIZED_NAME_SENT)
  private Integer sent;

  public static final String SERIALIZED_NAME_DELIVERED = "delivered";
  @SerializedName(SERIALIZED_NAME_DELIVERED)
  private Integer delivered;

  public static final String SERIALIZED_NAME_NOT_DELIVERED = "not_delivered";
  @SerializedName(SERIALIZED_NAME_NOT_DELIVERED)
  private Integer notDelivered;

  public static final String SERIALIZED_NAME_VIEWS = "views";
  @SerializedName(SERIALIZED_NAME_VIEWS)
  private Integer views;

  public static final String SERIALIZED_NAME_CLICKS = "clicks";
  @SerializedName(SERIALIZED_NAME_CLICKS)
  private Integer clicks;

  public static final String SERIALIZED_NAME_LAST_VIEW_DATE = "last_view_date";
  @SerializedName(SERIALIZED_NAME_LAST_VIEW_DATE)
  private OffsetDateTime lastViewDate;


  public ComplexContactAllOfPushStats sent(Integer sent) {
    
    this.sent = sent;
    return this;
  }

   /**
   * Push messages sent to the contact
   * @return sent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "5", value = "Push messages sent to the contact")

  public Integer getSent() {
    return sent;
  }


  public void setSent(Integer sent) {
    this.sent = sent;
  }


  public ComplexContactAllOfPushStats delivered(Integer delivered) {
    
    this.delivered = delivered;
    return this;
  }

   /**
   * Push messages delivered to the contact
   * @return delivered
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "5", value = "Push messages delivered to the contact")

  public Integer getDelivered() {
    return delivered;
  }


  public void setDelivered(Integer delivered) {
    this.delivered = delivered;
  }


  public ComplexContactAllOfPushStats notDelivered(Integer notDelivered) {
    
    this.notDelivered = notDelivered;
    return this;
  }

   /**
   * Push messages that were not delivered to the contact
   * @return notDelivered
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "0", value = "Push messages that were not delivered to the contact")

  public Integer getNotDelivered() {
    return notDelivered;
  }


  public void setNotDelivered(Integer notDelivered) {
    this.notDelivered = notDelivered;
  }


  public ComplexContactAllOfPushStats views(Integer views) {
    
    this.views = views;
    return this;
  }

   /**
   * Push messages that were viewed by the contact
   * @return views
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "4", value = "Push messages that were viewed by the contact")

  public Integer getViews() {
    return views;
  }


  public void setViews(Integer views) {
    this.views = views;
  }


  public ComplexContactAllOfPushStats clicks(Integer clicks) {
    
    this.clicks = clicks;
    return this;
  }

   /**
   * Total number of clicks made by the contact
   * @return clicks
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "3", value = "Total number of clicks made by the contact")

  public Integer getClicks() {
    return clicks;
  }


  public void setClicks(Integer clicks) {
    this.clicks = clicks;
  }


  public ComplexContactAllOfPushStats lastViewDate(OffsetDateTime lastViewDate) {
    
    this.lastViewDate = lastViewDate;
    return this;
  }

   /**
   * Date of the last push message view of the contact
   * @return lastViewDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Date of the last push message view of the contact")

  public OffsetDateTime getLastViewDate() {
    return lastViewDate;
  }


  public void setLastViewDate(OffsetDateTime lastViewDate) {
    this.lastViewDate = lastViewDate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ComplexContactAllOfPushStats complexContactAllOfPushStats = (ComplexContactAllOfPushStats) o;
    return Objects.equals(this.sent, complexContactAllOfPushStats.sent) &&
        Objects.equals(this.delivered, complexContactAllOfPushStats.delivered) &&
        Objects.equals(this.notDelivered, complexContactAllOfPushStats.notDelivered) &&
        Objects.equals(this.views, complexContactAllOfPushStats.views) &&
        Objects.equals(this.clicks, complexContactAllOfPushStats.clicks) &&
        Objects.equals(this.lastViewDate, complexContactAllOfPushStats.lastViewDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sent, delivered, notDelivered, views, clicks, lastViewDate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ComplexContactAllOfPushStats {\n");
    sb.append("    sent: ").append(toIndentedString(sent)).append("\n");
    sb.append("    delivered: ").append(toIndentedString(delivered)).append("\n");
    sb.append("    notDelivered: ").append(toIndentedString(notDelivered)).append("\n");
    sb.append("    views: ").append(toIndentedString(views)).append("\n");
    sb.append("    clicks: ").append(toIndentedString(clicks)).append("\n");
    sb.append("    lastViewDate: ").append(toIndentedString(lastViewDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

