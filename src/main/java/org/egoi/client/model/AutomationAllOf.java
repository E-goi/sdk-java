/*
 * APIv3 (Beta)
 *  # Introduction Just a quick pick!!! This is our new version of API. Remember, it is not stable yet!!! But we invite you play with it and give us your feedback ;) # Getting Started  E-goi can be integrated with many environments and programming languages via our REST API. We've created a developer focused portal to give your organization a clear and quick overview of how to integrate with E-goi. The developer portal focuses on scenarios for integration and flow of events. We recommend familiarizing yourself with all of the content in the developer portal, before start using our rest API.   The E-goi  APIv3 is served over HTTPS. To ensure data privacy, unencrypted HTTP is not supported.  Request data is passed to the API by POSTing JSON objects to the API endpoints with the appropriate parameters.   BaseURL = api.egoiapp.com  # HTTP Methods for RESTful Services This API supports 5 HTTP methods:  * <b>GET</b>: The HTTP GET method is used to **read** (or retrieve) a representation of a resource. * <b>POST</b>: The POST verb is most-often utilized to **create** new resources. * <b>PATCH</b>: PATCH is used for **modify** capabilities. The PATCH request only needs to contain the changes to the resource, not the complete resource * <b>PUT</b>: PUT is most-often utilized for **update** capabilities, PUT-ing to a known resource URI with the request body containing the newly-updated representation of the original resource. * <b>DELETE</b>: DELETE is pretty easy to understand. It is used to **delete** a resource identified by a URI.  # Authentication   We use a custom authentication method, you will need a apikey that you can find in your account settings. Below you will see a curl example to get your account information:  #!/bin/bash  curl -X GET 'https://api.egoiapp.com/my-account' \\  -H 'accept: application/json' \\  -H 'Apikey: <YOUR_APY_KEY>'  Here you can see a curl Post example with authentication:  #!/bin/bash  curl -X POST 'http://api.egoiapp.com/tags' \\  -H 'accept: application/json' \\  -H 'Apikey: <YOUR_APY_KEY>' \\  -H 'Content-Type: application/json' \\  -d '{`name`:`Your custom tag`,`color`:`#FFFFFF`}'  <security-definitions/>
 *
 * The version of the OpenAPI document: 3.0.0-beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.egoi.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.LocalDate;

/**
 * AutomationAllOf
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-01-06T16:12:38.678183Z[Europe/Lisbon]")
public class AutomationAllOf   {
  public static final String SERIALIZED_NAME_AUTOMATION_ID = "automation_id";
  @SerializedName(SERIALIZED_NAME_AUTOMATION_ID)
  private Integer automationId;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_LIST_ID = "list_id";
  @SerializedName(SERIALIZED_NAME_LIST_ID)
  private Integer listId;

  /**
   * Automation status
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    ACTIVE("active"),
    
    INACTIVE("inactive");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StatusEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private StatusEnum status;

  public static final String SERIALIZED_NAME_CREATED_BY = "created_by";
  @SerializedName(SERIALIZED_NAME_CREATED_BY)
  private Integer createdBy;

  public static final String SERIALIZED_NAME_ALLOW_MULTIPLE_CONTACTS = "allow_multiple_contacts";
  @SerializedName(SERIALIZED_NAME_ALLOW_MULTIPLE_CONTACTS)
  private Boolean allowMultipleContacts = true;

  public static final String SERIALIZED_NAME_CONTACT_LIMIT = "contact_limit";
  @SerializedName(SERIALIZED_NAME_CONTACT_LIMIT)
  private Integer contactLimit;

  public static final String SERIALIZED_NAME_CREATED = "created";
  @SerializedName(SERIALIZED_NAME_CREATED)
  private LocalDate created = null;

  public static final String SERIALIZED_NAME_UPDATED = "updated";
  @SerializedName(SERIALIZED_NAME_UPDATED)
  private LocalDate updated = null;


   /**
   * Get automationId
   * minimum: 1
   * @return automationId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "")

  public Integer getAutomationId() {
    return automationId;
  }




  public AutomationAllOf title(String title) {
    
    this.title = title;
    return this;
  }

   /**
   * Automation title
   * @return title
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Example Automation", value = "Automation title")

  public String getTitle() {
    return title;
  }


  public void setTitle(String title) {
    this.title = title;
  }


  public AutomationAllOf listId(Integer listId) {
    
    this.listId = listId;
    return this;
  }

   /**
   * Get listId
   * minimum: 1
   * @return listId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "")

  public Integer getListId() {
    return listId;
  }


  public void setListId(Integer listId) {
    this.listId = listId;
  }


  public AutomationAllOf status(StatusEnum status) {
    
    this.status = status;
    return this;
  }

   /**
   * Automation status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Automation status")

  public StatusEnum getStatus() {
    return status;
  }


  public void setStatus(StatusEnum status) {
    this.status = status;
  }


   /**
   * Get createdBy
   * minimum: 1
   * @return createdBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "")

  public Integer getCreatedBy() {
    return createdBy;
  }




  public AutomationAllOf allowMultipleContacts(Boolean allowMultipleContacts) {
    
    this.allowMultipleContacts = allowMultipleContacts;
    return this;
  }

   /**
   * True if the automation allows multiple contacts, false otherwise
   * @return allowMultipleContacts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "True if the automation allows multiple contacts, false otherwise")

  public Boolean getAllowMultipleContacts() {
    return allowMultipleContacts;
  }


  public void setAllowMultipleContacts(Boolean allowMultipleContacts) {
    this.allowMultipleContacts = allowMultipleContacts;
  }


  public AutomationAllOf contactLimit(Integer contactLimit) {
    
    this.contactLimit = contactLimit;
    return this;
  }

   /**
   * Contact limit for the automation. Contact limit value (value &#39;0&#39; is returned if contact                                 limit is not enabled)
   * minimum: 0
   * @return contactLimit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "10", value = "Contact limit for the automation. Contact limit value (value '0' is returned if contact                                 limit is not enabled)")

  public Integer getContactLimit() {
    return contactLimit;
  }


  public void setContactLimit(Integer contactLimit) {
    this.contactLimit = contactLimit;
  }


   /**
   * Get created
   * @return created
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LocalDate getCreated() {
    return created;
  }




   /**
   * Get updated
   * @return updated
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LocalDate getUpdated() {
    return updated;
  }




  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AutomationAllOf automationAllOf = (AutomationAllOf) o;
    return Objects.equals(this.automationId, automationAllOf.automationId) &&
        Objects.equals(this.title, automationAllOf.title) &&
        Objects.equals(this.listId, automationAllOf.listId) &&
        Objects.equals(this.status, automationAllOf.status) &&
        Objects.equals(this.createdBy, automationAllOf.createdBy) &&
        Objects.equals(this.allowMultipleContacts, automationAllOf.allowMultipleContacts) &&
        Objects.equals(this.contactLimit, automationAllOf.contactLimit) &&
        Objects.equals(this.created, automationAllOf.created) &&
        Objects.equals(this.updated, automationAllOf.updated);
  }

  @Override
  public int hashCode() {
    return Objects.hash(automationId, title, listId, status, createdBy, allowMultipleContacts, contactLimit, created, updated);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AutomationAllOf {\n");
    sb.append("    automationId: ").append(toIndentedString(automationId)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    listId: ").append(toIndentedString(listId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    allowMultipleContacts: ").append(toIndentedString(allowMultipleContacts)).append("\n");
    sb.append("    contactLimit: ").append(toIndentedString(contactLimit)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    updated: ").append(toIndentedString(updated)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

