/*
 * APIv3 (New)
 *  # Introduction This is our new version of API. We invite you to start using it and give us your feedback # Getting Started  E-goi can be integrated with many environments and programming languages via our REST API. We've created a developer focused portal to give your organization a clear and quick overview of how to integrate with E-goi. The developer portal focuses on scenarios for integration and flow of events. We recommend familiarizing yourself with all of the content in the developer portal, before start using our rest API.   The E-goi  APIv3 is served over HTTPS. To ensure data privacy, unencrypted HTTP is not supported.  Request data is passed to the API by POSTing JSON objects to the API endpoints with the appropriate parameters.   BaseURL = api.egoiapp.com  # RESTful Services This API supports 5 HTTP methods:  * <b>GET</b>: The HTTP GET method is used to **read** (or retrieve) a representation of a resource. * <b>POST</b>: The POST verb is most-often utilized to **create** new resources. * <b>PATCH</b>: PATCH is used for **modify** capabilities. The PATCH request only needs to contain the changes to the resource, not the complete resource * <b>PUT</b>: PUT is most-often utilized for **update** capabilities, PUT-ing to a known resource URI with the request body containing the newly-updated representation of the original resource. * <b>DELETE</b>: DELETE is pretty easy to understand. It is used to **delete** a resource identified by a URI.  # Authentication   We use a custom authentication method, you will need a apikey that you can find in your account settings. Below you will see a curl example to get your account information:  #!/bin/bash  curl -X GET 'https://api.egoiapp.com/my-account' \\  -H 'accept: application/json' \\  -H 'Apikey: <YOUR_APY_KEY>'  Here you can see a curl Post example with authentication:  #!/bin/bash  curl -X POST 'http://api.egoiapp.com/tags' \\  -H 'accept: application/json' \\  -H 'Apikey: <YOUR_APY_KEY>' \\  -H 'Content-Type: application/json' \\  -d '{`name`:`Your custom tag`,`color`:`#FFFFFF`}'  # SDK Get started quickly with E-goi with our integration tools. Our SDK is a modern open source library that makes it easy to integrate your application with E-goi services.  * <a href='https://github.com/E-goi/sdk-java'>Java</a>  * <a href='https://github.com/E-goi/sdk-php'>PHP</a>  * <a href='https://github.com/E-goi/sdk-python'>Python</a>  * <a href='https://github.com/E-goi/sdk-ruby'>Ruby</a>  * <a href='https://github.com/E-goi/sdk-javascript'>Javascript</a>  * <a href='https://github.com/E-goi/sdk-csharp'>C#</a>  # Stream Limits Stream limits are security mesures we have to make sure our API have a fair use policy, for this reason, any request that creates or modifies data (**POST**, **PATCH** and **PUT**) is limited to a maximum of **20MB** of content length. If you arrive to this limit in one of your request, you'll receive a HTTP code **413 (Request Entity Too Large)** and the request will be ignored. To avoid this error in importation's requests, it's advised the request's division in batches that have each one less than 20MB.  # Timeouts Timeouts set a maximum waiting time on a request's response. Our API, sets a default timeout for each request and when breached, you'll receive an HTTP **408 (Request Timeout)** error code. You should take into consideration that response times can vary widely based on the complexity of the request, amount of data being analyzed, and the load on the system and workspace at the time of the query. When dealing with such errors, you should first attempt to reduce the complexity and amount of data under analysis, and only then, if problems are still occurring ask for support.  For all these reasons, the default timeout for each request is **10 Seconds** and any request that creates or modifies data (**POST**, **PATCH** and **PUT**) will have a timeout of **60 Seconds**. Specific timeouts may exist for specific requests, these can be found in the request's documentation.  <security-definitions/>
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.egoi.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * RemoveResponseErrors
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-07-12T20:27:19.076308+01:00[Europe/Lisbon]")
public class RemoveResponseErrors   {
  public static final String SERIALIZED_NAME_INVALID_UNSUBSCRIPTION_REASON = "invalid_unsubscription_reason";
  @SerializedName(SERIALIZED_NAME_INVALID_UNSUBSCRIPTION_REASON)
  private List<String> invalidUnsubscriptionReason = null;

  public static final String SERIALIZED_NAME_INVALID_UNSUBSCRIPTION_METHOD = "invalid_unsubscription_method";
  @SerializedName(SERIALIZED_NAME_INVALID_UNSUBSCRIPTION_METHOD)
  private List<String> invalidUnsubscriptionMethod = null;

  public static final String SERIALIZED_NAME_INVALID_DATA_TYPE = "invalid_data_type";
  @SerializedName(SERIALIZED_NAME_INVALID_DATA_TYPE)
  private List<String> invalidDataType = null;

  public static final String SERIALIZED_NAME_CONTACT_NOT_IN_LIST = "contact_not_in_list";
  @SerializedName(SERIALIZED_NAME_CONTACT_NOT_IN_LIST)
  private List<String> contactNotInList = null;

  public static final String SERIALIZED_NAME_CONTACT_ALREADY_REMOVED = "contact_already_removed";
  @SerializedName(SERIALIZED_NAME_CONTACT_ALREADY_REMOVED)
  private List<String> contactAlreadyRemoved = null;


  public RemoveResponseErrors invalidUnsubscriptionReason(List<String> invalidUnsubscriptionReason) {
    
    this.invalidUnsubscriptionReason = invalidUnsubscriptionReason;
    return this;
  }

  public RemoveResponseErrors addInvalidUnsubscriptionReasonItem(String invalidUnsubscriptionReasonItem) {
    if (this.invalidUnsubscriptionReason == null) {
      this.invalidUnsubscriptionReason = new ArrayList<String>();
    }
    this.invalidUnsubscriptionReason.add(invalidUnsubscriptionReasonItem);
    return this;
  }

   /**
   * Get invalidUnsubscriptionReason
   * @return invalidUnsubscriptionReason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[\"cbb0077994\",\"be9715c108\",\"649a15f483\"]", value = "")

  public List<String> getInvalidUnsubscriptionReason() {
    return invalidUnsubscriptionReason;
  }


  public void setInvalidUnsubscriptionReason(List<String> invalidUnsubscriptionReason) {
    this.invalidUnsubscriptionReason = invalidUnsubscriptionReason;
  }


  public RemoveResponseErrors invalidUnsubscriptionMethod(List<String> invalidUnsubscriptionMethod) {
    
    this.invalidUnsubscriptionMethod = invalidUnsubscriptionMethod;
    return this;
  }

  public RemoveResponseErrors addInvalidUnsubscriptionMethodItem(String invalidUnsubscriptionMethodItem) {
    if (this.invalidUnsubscriptionMethod == null) {
      this.invalidUnsubscriptionMethod = new ArrayList<String>();
    }
    this.invalidUnsubscriptionMethod.add(invalidUnsubscriptionMethodItem);
    return this;
  }

   /**
   * Get invalidUnsubscriptionMethod
   * @return invalidUnsubscriptionMethod
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[\"732711d708\",\"ba5b2b14aa\"]", value = "")

  public List<String> getInvalidUnsubscriptionMethod() {
    return invalidUnsubscriptionMethod;
  }


  public void setInvalidUnsubscriptionMethod(List<String> invalidUnsubscriptionMethod) {
    this.invalidUnsubscriptionMethod = invalidUnsubscriptionMethod;
  }


  public RemoveResponseErrors invalidDataType(List<String> invalidDataType) {
    
    this.invalidDataType = invalidDataType;
    return this;
  }

  public RemoveResponseErrors addInvalidDataTypeItem(String invalidDataTypeItem) {
    if (this.invalidDataType == null) {
      this.invalidDataType = new ArrayList<String>();
    }
    this.invalidDataType.add(invalidDataTypeItem);
    return this;
  }

   /**
   * Get invalidDataType
   * @return invalidDataType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[\"44fc463242\"]", value = "")

  public List<String> getInvalidDataType() {
    return invalidDataType;
  }


  public void setInvalidDataType(List<String> invalidDataType) {
    this.invalidDataType = invalidDataType;
  }


  public RemoveResponseErrors contactNotInList(List<String> contactNotInList) {
    
    this.contactNotInList = contactNotInList;
    return this;
  }

  public RemoveResponseErrors addContactNotInListItem(String contactNotInListItem) {
    if (this.contactNotInList == null) {
      this.contactNotInList = new ArrayList<String>();
    }
    this.contactNotInList.add(contactNotInListItem);
    return this;
  }

   /**
   * Get contactNotInList
   * @return contactNotInList
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[\"a47a947e2b\"]", value = "")

  public List<String> getContactNotInList() {
    return contactNotInList;
  }


  public void setContactNotInList(List<String> contactNotInList) {
    this.contactNotInList = contactNotInList;
  }


  public RemoveResponseErrors contactAlreadyRemoved(List<String> contactAlreadyRemoved) {
    
    this.contactAlreadyRemoved = contactAlreadyRemoved;
    return this;
  }

  public RemoveResponseErrors addContactAlreadyRemovedItem(String contactAlreadyRemovedItem) {
    if (this.contactAlreadyRemoved == null) {
      this.contactAlreadyRemoved = new ArrayList<String>();
    }
    this.contactAlreadyRemoved.add(contactAlreadyRemovedItem);
    return this;
  }

   /**
   * Get contactAlreadyRemoved
   * @return contactAlreadyRemoved
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[\"a41a247e21\"]", value = "")

  public List<String> getContactAlreadyRemoved() {
    return contactAlreadyRemoved;
  }


  public void setContactAlreadyRemoved(List<String> contactAlreadyRemoved) {
    this.contactAlreadyRemoved = contactAlreadyRemoved;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RemoveResponseErrors removeResponseErrors = (RemoveResponseErrors) o;
    return Objects.equals(this.invalidUnsubscriptionReason, removeResponseErrors.invalidUnsubscriptionReason) &&
        Objects.equals(this.invalidUnsubscriptionMethod, removeResponseErrors.invalidUnsubscriptionMethod) &&
        Objects.equals(this.invalidDataType, removeResponseErrors.invalidDataType) &&
        Objects.equals(this.contactNotInList, removeResponseErrors.contactNotInList) &&
        Objects.equals(this.contactAlreadyRemoved, removeResponseErrors.contactAlreadyRemoved);
  }

  @Override
  public int hashCode() {
    return Objects.hash(invalidUnsubscriptionReason, invalidUnsubscriptionMethod, invalidDataType, contactNotInList, contactAlreadyRemoved);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RemoveResponseErrors {\n");
    sb.append("    invalidUnsubscriptionReason: ").append(toIndentedString(invalidUnsubscriptionReason)).append("\n");
    sb.append("    invalidUnsubscriptionMethod: ").append(toIndentedString(invalidUnsubscriptionMethod)).append("\n");
    sb.append("    invalidDataType: ").append(toIndentedString(invalidDataType)).append("\n");
    sb.append("    contactNotInList: ").append(toIndentedString(contactNotInList)).append("\n");
    sb.append("    contactAlreadyRemoved: ").append(toIndentedString(contactAlreadyRemoved)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

