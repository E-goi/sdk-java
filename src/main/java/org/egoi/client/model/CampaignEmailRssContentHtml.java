/*
 * APIv3 (Beta)
 *  # Introduction Just a quick peek!!! This is our new version of API. Remember, it is not stable yet!!! But we invite you play with it and give us your feedback ;) # Getting Started  E-goi can be integrated with many environments and programming languages via our REST API. We've created a developer focused portal to give your organization a clear and quick overview of how to integrate with E-goi. The developer portal focuses on scenarios for integration and flow of events. We recommend familiarizing yourself with all of the content in the developer portal, before start using our rest API.   The E-goi  APIv3 is served over HTTPS. To ensure data privacy, unencrypted HTTP is not supported.  Request data is passed to the API by POSTing JSON objects to the API endpoints with the appropriate parameters.   BaseURL = api.egoiapp.com  # RESTful Services This API supports 5 HTTP methods:  * <b>GET</b>: The HTTP GET method is used to **read** (or retrieve) a representation of a resource. * <b>POST</b>: The POST verb is most-often utilized to **create** new resources. * <b>PATCH</b>: PATCH is used for **modify** capabilities. The PATCH request only needs to contain the changes to the resource, not the complete resource * <b>PUT</b>: PUT is most-often utilized for **update** capabilities, PUT-ing to a known resource URI with the request body containing the newly-updated representation of the original resource. * <b>DELETE</b>: DELETE is pretty easy to understand. It is used to **delete** a resource identified by a URI.  # Authentication   We use a custom authentication method, you will need a apikey that you can find in your account settings. Below you will see a curl example to get your account information:  #!/bin/bash  curl -X GET 'https://api.egoiapp.com/my-account' \\  -H 'accept: application/json' \\  -H 'Apikey: <YOUR_APY_KEY>'  Here you can see a curl Post example with authentication:  #!/bin/bash  curl -X POST 'http://api.egoiapp.com/tags' \\  -H 'accept: application/json' \\  -H 'Apikey: <YOUR_APY_KEY>' \\  -H 'Content-Type: application/json' \\  -d '{`name`:`Your custom tag`,`color`:`#FFFFFF`}'  # SDK Get started quickly with E-goi with our integration tools. Our SDK is a modern open source library that makes it easy to integrate your application with E-goi services.  * <a href='https://github.com/E-goi/sdk-java'>Java</a>  * <a href='https://github.com/E-goi/sdk-php'>PHP</a>  * <a href='https://github.com/E-goi/sdk-python'>Python</a>  * <a href='https://github.com/E-goi/sdk-ruby'>Ruby</a>  * <a href='https://github.com/E-goi/sdk-javascript'>Javascript</a>  * <a href='https://github.com/E-goi/sdk-csharp'>C#</a>  # Stream Limits Stream limits are security mesures we have to make sure our API have a fair use policy, for this reason, any request that creates or modifies data (**POST**, **PATCH** and **PUT**) is limited to a maximum of **20MB** of content length. If you arrive to this limit in one of your request, you'll receive a HTTP code **413 (Request Entity Too Large)** and the request will be ignored. To avoid this error in importation's requests, it's advised the request's division in batches that have each one less than 20MB. <security-definitions/>
 *
 * The version of the OpenAPI document: 3.0.0-beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.egoi.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.egoi.client.model.CampaignEmailBaseContent;
import org.egoi.client.model.CampaignEmailRssContentHtmlAllOf;

/**
 * CampaignEmailRssContentHtml
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-08-10T12:53:53.038698+01:00[Europe/Lisbon]")
public class CampaignEmailRssContentHtml  implements CampaignEmailRssContent {
  /**
   * Gets or Sets type
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    HTML("html");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type;

  public static final String SERIALIZED_NAME_BODY = "body";
  @SerializedName(SERIALIZED_NAME_BODY)
  private String body;

  public static final String SERIALIZED_NAME_FEED = "feed";
  @SerializedName(SERIALIZED_NAME_FEED)
  private String feed;

  public static final String SERIALIZED_NAME_PLAIN_TEXT = "plain_text";
  @SerializedName(SERIALIZED_NAME_PLAIN_TEXT)
  private String plainText;

  public static final String SERIALIZED_NAME_SNIPPET = "snippet";
  @SerializedName(SERIALIZED_NAME_SNIPPET)
  private String snippet;


  public CampaignEmailRssContentHtml type(TypeEnum type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(example = "html", required = true, value = "")

  public TypeEnum getType() {
    return type;
  }


  public void setType(TypeEnum type) {
    this.type = type;
  }


  public CampaignEmailRssContentHtml body(String body) {
    
    this.body = body;
    return this;
  }

   /**
   * HTML code of the rss campaign
   * @return body
  **/
  @ApiModelProperty(example = "<body>{{FEEDBLOCK:https://example.com/?feed=egoi_rssfeed_gcoUFuaaBeAs4tfSY}}{{FEEDITEMS:count=1}}<div class='builder-actions-control selected'><table border='0' cellpadding='0' cellspacing='0' class='email-container' style='border-spacing: 0px; border-collapse: collapse; table-layout: fixed; margin: auto;' width='600' align='center' data-compile='true'><tbody><tr><td dir='ltr' valign='top' width='100%' bgcolor='#ffffff' style='background-color: rgb(255, 255, 255); padding: 20px;'><table border='0' cellpadding='0' cellspacing='0' class='row' width='100%' style='border-spacing: 0px; border-collapse: collapse; table-layout: fixed; margin: 0px auto;'><tbody><tr><th class='stack-column-center columns first' valign='top' width='33.333333333333336%' style='font-weight: 400; padding-right: 8px;'><table border='0' cellpadding='0' cellspacing='0' width='100%' style='border-spacing: 0px; border-collapse: collapse; table-layout: fixed; margin: 0px auto;'><tbody><tr><td dir='ltr' style='padding: 0px;' valign='top'><table border='0' cellpadding='0' cellspacing='0' class='builder-image-control image-6cbc6cd4b0f6c869b1d651e4288caa1c' data-control='image' width='100%' data-compile='true' style='border-spacing: 0px; border-collapse: collapse; table-layout: fixed; margin: 0px auto;'><tbody><tr><td valign='top' style=''><table border='0' cellpadding='0' cellspacing='0' align='center' width='' style='border-spacing: 0px; border-collapse: collapse; table-layout: fixed; margin: 0px auto;'><tbody><tr><td style='border: 0px;'><a href='{{FEEDITEM:LINK}}'><img align='center' border='0' class='float-center fluid' style='display: block; margin: 0px auto; height: auto; max-width: 179px; border: 0px !important; outline: none !important; text-decoration: none !important;' src='{{FEEDITEM:IMAGE}}' alt='beanie-768x768' height='179' width='179'></a></td></tr></tbody></table></td></tr></tbody></table></td></tr></tbody></table></th><th class='stack-column-center columns last' valign='top' width='66.66666666666667%' style='font-weight: 400; padding-left: 8px;'><table border='0' cellpadding='0' cellspacing='0' width='100%' style='border-spacing: 0px; border-collapse: collapse; table-layout: fixed; margin: 0px auto;'><tbody><tr><td dir='ltr' style='padding: 0px;' valign='top'><table data-control='title' width='100%' class='title-641c2ce04833885b026fd1e0f46c2973' id='641c2ce0-4833-885b-026f-d1e0f46c2973' data-compile='true' style='border-spacing: 0px; border-collapse: collapse; table-layout: fixed; margin: 0px auto;'><tbody><tr><td style=''><p style='font-family: Arial; font-size: 24px; color: rgb(0, 0, 0); line-height: 150%; text-align: left; padding-top: 0px; padding-bottom: 0px; margin: 0px;'>{{FEEDITEM:TITLE}}</p></td></tr></tbody></table><table data-control='paragraph' width='100%' class='paragraph-12fc4dd322cf0a3cd43032e85db67593' id='12fc4dd3-22cf-0a3c-d430-32e85db67593' data-compile='true' style='border-spacing: 0px; border-collapse: collapse; table-layout: fixed; margin: 0px auto;'><tbody><tr><td class='undefined' style=''><p style='font-family: Arial; font-size: 16px; color: rgb(109, 109, 109); line-height: 200%; text-align: left; padding-top: 0px; padding-bottom: 0px; margin: 0px; overflow: hidden;'>{{FEEDITEM:DESCRIPTION}}</p></td></tr></tbody></table></td></tr></tbody></table></th></tr></tbody></table></td></tr></tbody></table></div>{{ENDFEEDITEMS}}{{ENDFEEDBLOCK}}</body>", required = true, value = "HTML code of the rss campaign")

  public String getBody() {
    return body;
  }


  public void setBody(String body) {
    this.body = body;
  }


  public CampaignEmailRssContentHtml feed(String feed) {
    
    this.feed = feed;
    return this;
  }

   /**
   * Valid url for a rss feed
   * @return feed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "https://example.com/?feed=egoi_rssfeed_gcoUFuaaBeAs4tfSY", value = "Valid url for a rss feed")

  public String getFeed() {
    return feed;
  }


  public void setFeed(String feed) {
    this.feed = feed;
  }


  public CampaignEmailRssContentHtml plainText(String plainText) {
    
    this.plainText = plainText;
    return this;
  }

   /**
   * Plain text for the campaign
   * @return plainText
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Plain text for the campaign")

  public String getPlainText() {
    return plainText;
  }


  public void setPlainText(String plainText) {
    this.plainText = plainText;
  }


  public CampaignEmailRssContentHtml snippet(String snippet) {
    
    this.snippet = snippet;
    return this;
  }

   /**
   * Snippet text for the campaign
   * @return snippet
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Snippet text for the campaign")

  public String getSnippet() {
    return snippet;
  }


  public void setSnippet(String snippet) {
    this.snippet = snippet;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CampaignEmailRssContentHtml campaignEmailRssContentHtml = (CampaignEmailRssContentHtml) o;
    return Objects.equals(this.type, campaignEmailRssContentHtml.type) &&
        Objects.equals(this.body, campaignEmailRssContentHtml.body) &&
        Objects.equals(this.feed, campaignEmailRssContentHtml.feed) &&
        Objects.equals(this.plainText, campaignEmailRssContentHtml.plainText) &&
        Objects.equals(this.snippet, campaignEmailRssContentHtml.snippet);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, body, feed, plainText, snippet);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CampaignEmailRssContentHtml {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    body: ").append(toIndentedString(body)).append("\n");
    sb.append("    feed: ").append(toIndentedString(feed)).append("\n");
    sb.append("    plainText: ").append(toIndentedString(plainText)).append("\n");
    sb.append("    snippet: ").append(toIndentedString(snippet)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

