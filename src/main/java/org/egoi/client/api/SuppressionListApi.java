/*
 * APIv3 (Beta)
 *  # Introduction Just a quick pick!!! This is our new version of API. Remember, it is not stable yet!!! But we invite you play with it and give us your feedback ;) # Getting Started  E-goi can be integrated with many environments and programming languages via our REST API. We've created a developer focused portal to give your organization a clear and quick overview of how to integrate with E-goi. The developer portal focuses on scenarios for integration and flow of events. We recommend familiarizing yourself with all of the content in the developer portal, before start using our rest API.   The E-goi  APIv3 is served over HTTPS. To ensure data privacy, unencrypted HTTP is not supported.  Request data is passed to the API by POSTing JSON objects to the API endpoints with the appropriate parameters.   BaseURL = api.egoiapp.com  # HTTP Methods for RESTful Services This API supports 5 HTTP methods:  * <b>GET</b>: The HTTP GET method is used to **read** (or retrieve) a representation of a resource. * <b>POST</b>: The POST verb is most-often utilized to **create** new resources. * <b>PATCH</b>: PATCH is used for **modify** capabilities. The PATCH request only needs to contain the changes to the resource, not the complete resource * <b>PUT</b>: PUT is most-often utilized for **update** capabilities, PUT-ing to a known resource URI with the request body containing the newly-updated representation of the original resource. * <b>DELETE</b>: DELETE is pretty easy to understand. It is used to **delete** a resource identified by a URI.  # Authentication   We use a custom authentication method, you will need a apikey that you can find in your account settings. Below you will see a curl example to get your account information:  #!/bin/bash  curl -X GET 'https://api.egoiapp.com/my-account' \\  -H 'accept: application/json' \\  -H 'Apikey: <YOUR_APY_KEY>'  Here you can see a curl Post example with authentication:  #!/bin/bash  curl -X POST 'http://api.egoiapp.com/tags' \\  -H 'accept: application/json' \\  -H 'Apikey: <YOUR_APY_KEY>' \\  -H 'Content-Type: application/json' \\  -d '{`name`:`Your custom tag`,`color`:`#FFFFFF`}'  <security-definitions/>
 *
 * The version of the OpenAPI document: 3.0.0-beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.egoi.client.api;

import org.egoi.client.ApiCallback;
import org.egoi.client.ApiClient;
import org.egoi.client.ApiException;
import org.egoi.client.ApiResponse;
import org.egoi.client.Configuration;
import org.egoi.client.Pair;
import org.egoi.client.ProgressRequestBody;
import org.egoi.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.egoi.client.model.Forbidden;
import org.egoi.client.model.InternalServerError;
import org.threeten.bp.OffsetDateTime;
import org.egoi.client.model.SuppressionListItems;
import org.egoi.client.model.Unauthorized;
import org.egoi.client.model.UnprocessableEntity;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class SuppressionListApi {
    private ApiClient localVarApiClient;

    public SuppressionListApi() {
        this(Configuration.getDefaultApiClient());
    }

    public SuppressionListApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    /**
     * Build call for getAllSuppressionList
     * @param type Suppression type (optional)
     * @param method Suppression method (optional)
     * @param value Reference attribute to value suppression list (optional)
     * @param campaignHash Reference attribute to campaign id (optional)
     * @param createdMin Created initial date (optional)
     * @param createdMax Created finish (optional)
     * @param offset Element offset (starting at zero for the first element) (optional)
     * @param limit Number of items to return (optional, default to 10)
     * @param order Type of order (optional, default to desc)
     * @param orderBy Reference attribute to order the suppression list (optional, default to id)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Unauthorized </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Forbidden </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Unprocessable Entity </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getAllSuppressionListCall(String type, String method, String value, String campaignHash, OffsetDateTime createdMin, OffsetDateTime createdMax, Integer offset, Integer limit, String order, String orderBy, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/suppression-list";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (type != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("type", type));
        }

        if (method != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("method", method));
        }

        if (value != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("value", value));
        }

        if (campaignHash != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("campaign_hash", campaignHash));
        }

        if (createdMin != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("created_min", createdMin));
        }

        if (createdMax != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("created_max", createdMax));
        }

        if (offset != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("offset", offset));
        }

        if (limit != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("limit", limit));
        }

        if (order != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("order", order));
        }

        if (orderBy != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("order_by", orderBy));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] { "Apikey" };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getAllSuppressionListValidateBeforeCall(String type, String method, String value, String campaignHash, OffsetDateTime createdMin, OffsetDateTime createdMax, Integer offset, Integer limit, String order, String orderBy, final ApiCallback _callback) throws ApiException {
        

        okhttp3.Call localVarCall = getAllSuppressionListCall(type, method, value, campaignHash, createdMin, createdMax, offset, limit, order, orderBy, _callback);
        return localVarCall;

    }

    /**
     * Get the suppression list
     * Returns the suppression list
     * @param type Suppression type (optional)
     * @param method Suppression method (optional)
     * @param value Reference attribute to value suppression list (optional)
     * @param campaignHash Reference attribute to campaign id (optional)
     * @param createdMin Created initial date (optional)
     * @param createdMax Created finish (optional)
     * @param offset Element offset (starting at zero for the first element) (optional)
     * @param limit Number of items to return (optional, default to 10)
     * @param order Type of order (optional, default to desc)
     * @param orderBy Reference attribute to order the suppression list (optional, default to id)
     * @return SuppressionListItems
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Unauthorized </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Forbidden </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Unprocessable Entity </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
     </table>
     */
    public SuppressionListItems getAllSuppressionList(String type, String method, String value, String campaignHash, OffsetDateTime createdMin, OffsetDateTime createdMax, Integer offset, Integer limit, String order, String orderBy) throws ApiException {
        ApiResponse<SuppressionListItems> localVarResp = getAllSuppressionListWithHttpInfo(type, method, value, campaignHash, createdMin, createdMax, offset, limit, order, orderBy);
        return localVarResp.getData();
    }

    /**
     * Get the suppression list
     * Returns the suppression list
     * @param type Suppression type (optional)
     * @param method Suppression method (optional)
     * @param value Reference attribute to value suppression list (optional)
     * @param campaignHash Reference attribute to campaign id (optional)
     * @param createdMin Created initial date (optional)
     * @param createdMax Created finish (optional)
     * @param offset Element offset (starting at zero for the first element) (optional)
     * @param limit Number of items to return (optional, default to 10)
     * @param order Type of order (optional, default to desc)
     * @param orderBy Reference attribute to order the suppression list (optional, default to id)
     * @return ApiResponse&lt;SuppressionListItems&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Unauthorized </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Forbidden </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Unprocessable Entity </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<SuppressionListItems> getAllSuppressionListWithHttpInfo(String type, String method, String value, String campaignHash, OffsetDateTime createdMin, OffsetDateTime createdMax, Integer offset, Integer limit, String order, String orderBy) throws ApiException {
        okhttp3.Call localVarCall = getAllSuppressionListValidateBeforeCall(type, method, value, campaignHash, createdMin, createdMax, offset, limit, order, orderBy, null);
        Type localVarReturnType = new TypeToken<SuppressionListItems>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get the suppression list (asynchronously)
     * Returns the suppression list
     * @param type Suppression type (optional)
     * @param method Suppression method (optional)
     * @param value Reference attribute to value suppression list (optional)
     * @param campaignHash Reference attribute to campaign id (optional)
     * @param createdMin Created initial date (optional)
     * @param createdMax Created finish (optional)
     * @param offset Element offset (starting at zero for the first element) (optional)
     * @param limit Number of items to return (optional, default to 10)
     * @param order Type of order (optional, default to desc)
     * @param orderBy Reference attribute to order the suppression list (optional, default to id)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Unauthorized </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Forbidden </td><td>  -  </td></tr>
        <tr><td> 422 </td><td> Unprocessable Entity </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal Server Error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getAllSuppressionListAsync(String type, String method, String value, String campaignHash, OffsetDateTime createdMin, OffsetDateTime createdMax, Integer offset, Integer limit, String order, String orderBy, final ApiCallback<SuppressionListItems> _callback) throws ApiException {

        okhttp3.Call localVarCall = getAllSuppressionListValidateBeforeCall(type, method, value, campaignHash, createdMin, createdMax, offset, limit, order, orderBy, _callback);
        Type localVarReturnType = new TypeToken<SuppressionListItems>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
